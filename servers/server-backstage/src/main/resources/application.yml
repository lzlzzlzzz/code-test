server:
  port: 28888
  servlet:
    context-path: /code-test
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # 连接数满后的排队数，默认为100
    accept-count: 1000
    threads:
      # tomcat最大线程数，默认为200
      max: 800
      # Tomcat启动初始化的线程数，默认值10
      min-spare: 100

logging:
  # 配置日志位置
  file:
    path: /logs/code-test/code-test.out
  # 配置日志输出格式（定位到哪行输出，方便排查）
  pattern:
    console: '%d{HH:mm:ss.SSS} %-5level %logger{36} [%line] - %msg%n'
  level:
    com.code: info
    org.springframework: info

# Spring配置
spring:
  application:
    name: server-backstage
  profiles: 
    active: dev
  # 文件上传
  servlet:
     multipart:
       # 单个文件大小
       max-file-size:  10MB
       # 设置总上传的文件大小
       max-request-size:  20MB
  # 服务模块
  devtools:
    restart:
      # 热部署开关
      enabled: true

xss:
  enabled: true
  excludes: /system/test,/myweb/mypage
  urlPatterns: /system/*,/myweb/*

# MyBatis配置
mybatis:
    # 搜索指定包别名
    typeAliasesPackage: com.code.**.domain
    # 配置mapper的扫描，找到所有的mapper.xml映射文件
    mapperLocations: classpath*:mapper/**/*Mapper.xml
    # 加载全局的配置文件
    configLocation: classpath:mybatis/mybatis-config.xml

pagehelper:
  helperDialect: mysql
  supportMethodsArguments: true
  params: count=countSql

#自定义参数
define:
  userinfo1:
    username: 666666
    age: 88
  userinfo2:
    username: 666666
    age: 88
  quartz:
    cron: "*/5 * * * * ?"
  file:
    path: D:\upload\
auto:
  name: project1
  message: project1 message